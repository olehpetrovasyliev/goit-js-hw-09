{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACaC,SAASC,cAAc,QA6D/BC,iBAAiB,UA5CtB,SAAkBC,GAChBA,EAAIC,iBACJ,MAAMC,EAAWC,OAAOH,EAAII,cAAcC,SAASC,MAAMC,OACnDC,EAASL,OAAOH,EAAII,cAAcC,SAASG,OAAOD,OAClDE,EAAON,OAAOH,EAAII,cAAcC,SAASI,KAAKF,OAEpD,IAAK,IAAIG,EAAI,EAAGA,GAAKF,EAAQE,IAAK,CAChC,IAAIC,EAAWD,EACXE,EAAqB,IAANF,EAAUR,EAAWA,EAAWO,GAAQE,EAAW,GAEtEE,YAAW,KAzBf,IAAuBC,EAAUR,GAAVQ,EA0BHH,EA1BaL,EA0BHM,EAzBrB,IAAIG,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCP,YAAW,KACLK,EAEFF,EAAQ,C,SAAEF,E,MAAUR,IAGpBW,EAAO,C,SAAEH,E,MAAUR,GAAQ,GAE5BA,EAAM,KAgBJe,MAAK,EAACP,SAAEA,EAAQR,MAAEA,MAEfgB,EAAA3B,GAAS4B,OAAOC,QACd,4BAA4BV,QAAeF,MAK5C,IAGJa,OAAM,EAACX,SAAEA,EAAQR,MAAEA,MAEhBgB,EAAA3B,GAAS4B,OAAOG,QACd,4BAA4BZ,QAAeF,MAK5C,IAIPe,QAAQC,IAAIhB,EAAa,GACxBA,E,CAGLZ,EAAII,cAAcC,SAASC,MAAMC,MAAQ,GACzCP,EAAII,cAAcC,SAASG,OAAOD,MAAQ,GAC1CP,EAAII,cAAcC,SAASI,KAAKF,MAAQ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  const delayInp = Number(evt.currentTarget.elements.delay.value);\n  const amount = Number(evt.currentTarget.elements.amount.value);\n  const step = Number(evt.currentTarget.elements.step.value);\n\n  for (let i = 1; i <= amount; i++) {\n    let position = i;\n    let currentDelay = i === 1 ? delayInp : delayInp + step * (position - 1);\n\n    setTimeout(() => {\n      createPromise(position, currentDelay)\n        .then(({ position, delay }) => {\n          if (position === 1) {\n            Notiflix.Notify.success(\n              `&#9989 Fulfilled promise ${position} in ${currentDelay}ms`\n            );\n          } else {\n            Notiflix.Notify.success(\n              `&#9989 Fulfilled promise ${position} in ${currentDelay}ms`\n            );\n          }\n        })\n        .catch(({ position, delay }) => {\n          if (position === 1) {\n            Notiflix.Notify.failure(\n              `&#10060 Rejected promise ${position} in ${currentDelay}ms`\n            );\n          } else {\n            Notiflix.Notify.failure(\n              `&#10060 Rejected promise ${position} in ${currentDelay}ms`\n            );\n          }\n        });\n\n      console.log(currentDelay);\n    }, currentDelay);\n  }\n\n  evt.currentTarget.elements.delay.value = '';\n  evt.currentTarget.elements.amount.value = '';\n  evt.currentTarget.elements.step.value = '';\n}\n\nform.addEventListener('submit', onSubmit);\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","evt","preventDefault","delayInp","Number","currentTarget","elements","delay","value","amount","step","i","position1","currentDelay","setTimeout","position","Promise","resolve","reject","shouldResolve","Math","random","then","$parcel$interopDefault","Notify","success","catch","failure","console","log"],"version":3,"file":"03-promises.197a7479.js.map"}