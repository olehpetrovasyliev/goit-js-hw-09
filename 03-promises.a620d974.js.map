{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACaC,SAASC,cAAc,QA6D/BC,iBAAiB,UA5CtB,SAAkBC,G,kBAOd,IAAIC,EAAWC,EACXC,EAAqB,IAAND,EAAUE,EAAWA,EAAWC,GAAQJ,EAAW,GAEtEK,YAAW,WAzBf,IAAuBC,EAAUC,GAAVD,EA0BHN,EA1BaO,EA0BHL,EAzBrB,IAAIM,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCR,YAAW,WACLM,EAEFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,KAgBEO,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAeS,EAALR,MAEfS,EAAAtB,GAASuB,OAAOC,QACd,4BAA2CC,OAAfb,EAAS,QAAmBa,OAAbjB,EAAa,M,IAQ7DkB,OAAM,SAAAL,G,IAAGT,EAAQS,EAART,SAAeS,EAALR,MAEhBS,EAAAtB,GAASuB,OAAOI,QACd,4BAA2CF,OAAfb,EAAS,QAAmBa,OAAbjB,EAAa,M,IAShEoB,QAAQC,IAAIrB,E,GACXA,E,EAnCLH,EAAIyB,iBAKJ,IAJA,IAAMrB,EAAWsB,OAAO1B,EAAI2B,cAAcC,SAASpB,MAAMqB,OACnDC,EAASJ,OAAO1B,EAAI2B,cAAcC,SAASE,OAAOD,OAClDxB,EAAOqB,OAAO1B,EAAI2B,cAAcC,SAASvB,KAAKwB,OAE3CE,EAAI,EAAGA,GAAKD,EAAQC,IAAGC,EAAAD,GAiChC/B,EAAI2B,cAAcC,SAASpB,MAAMqB,MAAQ,GACzC7B,EAAI2B,cAAcC,SAASE,OAAOD,MAAQ,GAC1C7B,EAAI2B,cAAcC,SAASvB,KAAKwB,MAAQ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  const delayInp = Number(evt.currentTarget.elements.delay.value);\n  const amount = Number(evt.currentTarget.elements.amount.value);\n  const step = Number(evt.currentTarget.elements.step.value);\n\n  for (let i = 1; i <= amount; i++) {\n    let position = i;\n    let currentDelay = i === 1 ? delayInp : delayInp + step * (position - 1);\n\n    setTimeout(() => {\n      createPromise(position, currentDelay)\n        .then(({ position, delay }) => {\n          if (position === 1) {\n            Notiflix.Notify.success(\n              `&#9989 Fulfilled promise ${position} in ${currentDelay}ms`\n            );\n          } else {\n            Notiflix.Notify.success(\n              `&#9989 Fulfilled promise ${position} in ${currentDelay}ms`\n            );\n          }\n        })\n        .catch(({ position, delay }) => {\n          if (position === 1) {\n            Notiflix.Notify.failure(\n              `&#10060 Rejected promise ${position} in ${currentDelay}ms`\n            );\n          } else {\n            Notiflix.Notify.failure(\n              `&#10060 Rejected promise ${position} in ${currentDelay}ms`\n            );\n          }\n        });\n\n      console.log(currentDelay);\n    }, currentDelay);\n  }\n\n  evt.currentTarget.elements.delay.value = '';\n  evt.currentTarget.elements.amount.value = '';\n  evt.currentTarget.elements.step.value = '';\n}\n\nform.addEventListener('submit', onSubmit);\n"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","evt","position1","i","currentDelay","delayInp","step","setTimeout","position","delay","Promise","resolve","reject","shouldResolve","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","console","log","preventDefault","Number","currentTarget","elements","value","amount","i1","_loop"],"version":3,"file":"03-promises.a620d974.js.map"}