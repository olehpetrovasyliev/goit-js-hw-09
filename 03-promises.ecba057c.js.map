{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACaC,SAASC,cAAc,QAiD/BC,iBAAiB,UAjCtB,SAAkBC,G,kBAOd,IAAIC,EAAWC,EAAI,EAIbC,EAAUC,aAAY,WAzBhC,IAAuBC,EAAUC,GAAVD,EA0BHJ,EA1BaK,EA0BHC,EAzBrB,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEJ,WAAUC,UAGpBI,EAAO,CAAEL,WAAUC,S,GAEpBA,E,KAgBES,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MACjBW,EAAAtB,GAASuB,OAAOC,QACd,wCACEC,OADsCf,EAAS,QAEhDe,OADCd,EAAQD,EACT,M,IAGJgB,OAAM,SAAAL,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MAClBW,EAAAtB,GAASuB,OAAOI,QACd,wBAAuCF,OAAff,EAAS,QAAuBe,OAAjBd,EAAQD,EAAS,M,IAG9DkB,QAAQC,IAAIC,GACZC,cAAcvB,E,GACbwB,OAAOpB,EAAON,G,EA1BnBD,EAAI4B,iBACaD,OAAO3B,EAAI6B,cAAcC,SAASxB,MAAMyB,OAIzD,IAJA,IACMC,EAASL,OAAO3B,EAAI6B,cAAcC,SAASE,OAAOD,OAClDxB,EAAOoB,OAAO3B,EAAI6B,cAAcC,SAASvB,KAAKwB,OAChDN,EAAa,EACRQ,EAAI,EAAGA,EAAID,EAAQC,IAAGC,EAAAD,GAuB/BjC,EAAI6B,cAAcC,SAASxB,MAAMyB,MAAQ,GACzC/B,EAAI6B,cAAcC,SAASE,OAAOD,MAAQ,GAC1C/B,EAAI6B,cAAcC,SAASvB,KAAKwB,MAAQ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  const delayInp = Number(evt.currentTarget.elements.delay.value);\n  const amount = Number(evt.currentTarget.elements.amount.value);\n  const step = Number(evt.currentTarget.elements.step.value);\n  let totalDelay = 0;\n  for (let i = 0; i < amount; i++) {\n    let position = i + 1;\n    // delay += position;\n    // console.log(i);\n\n    const timerId = setInterval(() => {\n      createPromise(position, step)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `:white_check_mark: Fulfilled promise ${position} in ${\n              delay * position\n            }ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `:x: Rejected promise ${position} in ${delay * position}ms`\n          );\n        });\n      console.log(totalDelay);\n      clearInterval(timerId);\n    }, Number(step * position));\n  }\n  evt.currentTarget.elements.delay.value = '';\n  evt.currentTarget.elements.amount.value = '';\n  evt.currentTarget.elements.step.value = '';\n}\nform.addEventListener('submit', onSubmit);\n"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","evt","position1","i","timerId","setInterval","position","delay","step","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","console","log","totalDelay","clearInterval","Number","preventDefault","currentTarget","elements","value","amount","i1","_loop"],"version":3,"file":"03-promises.ecba057c.js.map"}