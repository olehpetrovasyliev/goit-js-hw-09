{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACaC,SAASC,cAAc,QA+D/BC,iBAAiB,UA/CtB,SAAkBC,GAChBA,EAAIC,iBACJ,MAAMC,EAAWC,OAAOH,EAAII,cAAcC,SAASC,MAAMC,OACnDC,EAASL,OAAOH,EAAII,cAAcC,SAASG,OAAOD,OAClDE,EAAON,OAAOH,EAAII,cAAcC,SAASI,KAAKF,OAEpD,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAC/B,IAAIC,EAAWD,EAAI,EAInB,MAAME,EAAUC,aAAY,KAzBhC,IAAuBC,EAAUR,GAAVQ,EA0BHH,EA1BaL,EA0BHG,EAzBrB,IAAIM,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EAEFF,EAAQ,C,SAAEF,E,MAAUR,IAGpBW,EAAO,C,SAAEH,E,MAAUR,GAAQ,GAE5BA,EAAM,KAgBJgB,MAAK,EAACR,SAAEA,EAAQR,MAAEA,MACA,IAAbQ,EACFS,EAAA5B,GAAS6B,OAAOC,QACd,4BAA4BX,QAAeZ,OAG7CqB,EAAA5B,GAAS6B,OAAOC,QACd,4BAA4BX,QAC1BZ,EAAWO,GAAQK,EAAW,OAEjC,IAGJY,OAAM,EAACZ,SAAEA,EAAQR,MAAEA,MACD,IAAbQ,EACFS,EAAA5B,GAAS6B,OAAOG,QACd,4BAA4Bb,QAAeZ,OAG7CqB,EAAA5B,GAAS6B,OAAOG,QACd,4BAA4Bb,QAC1BZ,EAAWO,GAAQK,EAAW,OAEjC,IAGPc,QAAQC,IAlCK,GAmCbC,cAAclB,EAAQ,GACrBT,OAAOM,EAAOE,G,CAEnBX,EAAII,cAAcC,SAASC,MAAMC,MAAQ,GACzCP,EAAII,cAAcC,SAASG,OAAOD,MAAQ,GAC1CP,EAAII,cAAcC,SAASI,KAAKF,MAAQ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  const delayInp = Number(evt.currentTarget.elements.delay.value);\n  const amount = Number(evt.currentTarget.elements.amount.value);\n  const step = Number(evt.currentTarget.elements.step.value);\n  let totalDelay = 0;\n  for (let i = 0; i < amount; i++) {\n    let position = i + 1;\n    // delay += position;\n    // console.log(i);\n\n    const timerId = setInterval(() => {\n      createPromise(position, step)\n        .then(({ position, delay }) => {\n          if (position === 1) {\n            Notiflix.Notify.success(\n              `&#9989 Fulfilled promise ${position} in ${delayInp}ms`\n            );\n          } else {\n            Notiflix.Notify.success(\n              `&#9989 Fulfilled promise ${position} in ${\n                delayInp + step * (position - 1)\n              }ms`\n            );\n          }\n        })\n        .catch(({ position, delay }) => {\n          if (position === 1) {\n            Notiflix.Notify.failure(\n              `&#10060 Rejected promise ${position} in ${delayInp}ms`\n            );\n          } else {\n            Notiflix.Notify.failure(\n              `&#10060 Rejected promise ${position} in ${\n                delayInp + step * (position - 1)\n              }ms`\n            );\n          }\n        });\n      console.log(totalDelay);\n      clearInterval(timerId);\n    }, Number(step * position));\n  }\n  evt.currentTarget.elements.delay.value = '';\n  evt.currentTarget.elements.amount.value = '';\n  evt.currentTarget.elements.step.value = '';\n}\nform.addEventListener('submit', onSubmit);\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","evt","preventDefault","delayInp","Number","currentTarget","elements","delay","value","amount","step","i","position1","timerId","setInterval","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","$parcel$interopDefault","Notify","success","catch","failure","console","log","clearInterval"],"version":3,"file":"03-promises.749497d3.js.map"}